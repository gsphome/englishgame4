name: Security Checks

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Check for high/critical vulnerabilities
        run: npm audit --audit-level=high

  code-security-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --summary
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD'

  security-headers-check:
    name: Security Headers Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate HTML security headers
        run: |
          echo "Checking index.html for security headers..."
          grep -q "Content-Security-Policy" index.html || (echo "Missing CSP header" && exit 1)
          grep -q "X-Content-Type-Options" index.html || (echo "Missing X-Content-Type-Options header" && exit 1)
          grep -q "X-Frame-Options" index.html || (echo "Missing X-Frame-Options header" && exit 1)
          echo "Security headers validation passed!"

  html-validation:
    name: HTML Security Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Validate HTML output
        run: |
          echo "Checking for potential XSS vulnerabilities in build output..."
          # Check for dangerous HTML patterns
          if grep -r "dangerouslySetInnerHTML" dist/ 2>/dev/null; then
            echo "Found dangerouslySetInnerHTML usage - ensure it's properly sanitized"
          fi
          
          # Check for inline scripts (should be minimal)
          if grep -r "<script>" dist/ 2>/dev/null; then
            echo "Found inline scripts - review for security"
          fi
          
          echo "HTML validation completed"

  notify-security-issues:
    name: Security Issue Notification
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, secret-scan, license-check]
    if: failure()
    steps:
      - name: Create security issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security vulnerabilities detected',
              body: 'Automated security scan detected potential vulnerabilities. Please review the failed workflow runs.',
              labels: ['security', 'bug']
            })